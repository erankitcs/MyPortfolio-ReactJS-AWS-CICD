{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PortfolioDeployerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/portfoliocicd-dev-PortfolioDeployer"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "portfoliocicd",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/portfoliocicd-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/portfoliocicd-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codepipeline:PutJobSuccessResult",
                    "codepipeline:PutJobFailureResult"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "Artifacts",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "PortfolioSite",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "portfoliocicd",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PortfolioDeployerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/portfoliocicd/dev/1588427504872-2020-05-02T13:51:44.872Z/portfoliocicd.zip"
        },
        "FunctionName": "portfoliocicd-dev-PortfolioDeployer",
        "Handler": "handler.portfolio_deployer",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.8",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PORTFOLIO_BUCKET": "ankitportfoliowebsitecontents"
          }
        }
      },
      "DependsOn": [
        "PortfolioDeployerLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PortfolioDeployerLambdaVersionWh0ElRJO5FFv54QYuKjTML0zOnsYw53MRKpuZL2eQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PortfolioDeployerLambdaFunction"
        },
        "CodeSha256": "sdKVLZrxP9/YjhwFKSR6rry6srT6skH+b4UlH1ZhFyA="
      }
    },
    "PortfolioSite": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": "ankitportfoliowebsitecontents",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html"
        }
      }
    },
    "SSLCert": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "ankitsingh.techenvision.net"
      }
    },
    "DnsRecords": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneName": "techenvision.net.",
        "Comment": "DNS records associated with Ankit Portfolio website.",
        "RecordSets": [
          {
            "Name": "ankitsingh.techenvision.net",
            "Type": "A",
            "AliasTarget": {
              "DNSName": {
                "Fn::GetAtt": "CDN.DomainName"
              },
              "HostedZoneId": "Z2FDTNDATAQYW2"
            }
          },
          {
            "Name": "ankitsingh.techenvision.net",
            "Type": "AAAA",
            "AliasTarget": {
              "DNSName": {
                "Fn::GetAtt": "CDN.DomainName"
              },
              "HostedZoneId": "Z2FDTNDATAQYW2"
            }
          }
        ]
      }
    },
    "CDN": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "SSLCert"
            },
            "SslSupportMethod": "sni-only"
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "Aliases": [
            "ankitsingh.techenvision.net"
          ],
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    "ankitportfoliowebsitecontents",
                    ".",
                    {
                      "Fn::FindInMap": [
                        "RegionMap",
                        {
                          "Ref": "AWS::Region"
                        },
                        "websiteendpoint"
                      ]
                    }
                  ]
                ]
              },
              "Id": "S3Origin",
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginProtocolPolicy": "http-only"
              }
            }
          ],
          "DefaultCacheBehavior": {
            "ViewerProtocolPolicy": "allow-all",
            "TargetOriginId": "S3Origin",
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "DefaultTTL": 30,
            "MinTTL": 10,
            "ForwardedValues": {
              "QueryString": true
            }
          }
        }
      }
    },
    "Artifacts": {
      "Properties": {
        "BucketName": "ankitportfolioartifactsbucket",
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 30,
              "Status": "Enabled"
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "CodeBuildPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "ankitportfolio-codebuild-access",
        "Roles": [
          {
            "Ref": "BuildProjectRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildLogGroup",
                    "Arn"
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Artifacts",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "BuildProject",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "BuildProjectRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "ankitportfoliobuildrole",
        "Description": "Used in CodeBuild project. Created by CloudFormation",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codebuild.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/service-role/"
      }
    },
    "PipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "ankitportfoliopipelinerole",
        "Description": "Used by CodePipeline. Created by CloudFormation",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "s3-access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:DeleteObject",
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:PutObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "Artifacts"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "codebuild-access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:StartBuild",
                    "codebuild:BatchGetBuilds"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "BuildProject",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "deploy-access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "PortfolioDeployerLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "BuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": "ankitportfoliobuild",
        "ServiceRole": {
          "Fn::GetAtt": [
            "BuildProjectRole",
            "Arn"
          ]
        },
        "LogsConfig": {
          "CloudWatchLogs": {
            "GroupName": {
              "Ref": "CodeBuildLogGroup"
            },
            "Status": "ENABLED"
          }
        },
        "Source": {
          "Type": "CODEPIPELINE",
          "BuildSpec": "buildspec.yml"
        },
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:4.0",
          "Type": "LINUX_CONTAINER"
        }
      }
    },
    "CodeBuildLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/codebuild/ankitportfoliobuild",
        "RetentionInDays": 7
      }
    },
    "Pipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": "ankitportfoliopipeline",
        "ArtifactStore": {
          "Location": {
            "Ref": "Artifacts"
          },
          "Type": "S3"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "PipelineRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "GitHubSource",
                "Namespace": "SourceVariables",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "erankitcs",
                  "OAuthToken": "558c4aef8552d7fb535809d812402e5539726a54",
                  "Repo": "MyPortfolio-ReactJS-AWS-CICD",
                  "Branch": "master",
                  "PollForSourceChanges": false
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ]
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "Build",
                "Namespace": "BuildVariables",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "BuildProject"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifact"
                  }
                ],
                "OutputArtifacts": [
                  {
                    "Name": "BuildArtifact"
                  }
                ]
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "Deploy",
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "InputArtifacts": [
                  {
                    "Name": "BuildArtifact"
                  }
                ],
                "OutputArtifacts": [],
                "Configuration": {
                  "FunctionName": "portfoliocicd-dev-PortfolioDeployer"
                }
              }
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "PortfolioDeployerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PortfolioDeployerLambdaVersionWh0ElRJO5FFv54QYuKjTML0zOnsYw53MRKpuZL2eQ"
      }
    }
  },
  "Mappings": {
    "RegionMap": {
      "ap-northeast-1": {
        "S3hostedzoneID": "Z2M4EHUR26P7ZW",
        "websiteendpoint": "s3-website-ap-northeast-1.amazonaws.com"
      },
      "ap-northeast-2": {
        "S3hostedzoneID": "Z3W03O7B5YMIYP",
        "websiteendpoint": "s3-website.ap-northeast-2.amazonaws.com"
      },
      "ap-south-1": {
        "S3hostedzoneID": "Z11RGJOFQNVJUP",
        "websiteendpoint": "s3-website.ap-south-1.amazonaws.com"
      },
      "ap-southeast-1": {
        "S3hostedzoneID": "Z3O0J2DXBE1FTB",
        "websiteendpoint": "s3-website-ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "S3hostedzoneID": "Z1WCIGYICN2BYD",
        "websiteendpoint": "s3-website-ap-southeast-2.amazonaws.com"
      },
      "eu-central-1": {
        "S3hostedzoneID": "Z21DNDUVLTQW6Q",
        "websiteendpoint": "s3-website.eu-central-1.amazonaws.com"
      },
      "eu-west-1": {
        "S3hostedzoneID": "Z1BKCTXD74EZPE",
        "websiteendpoint": "s3-website-eu-west-1.amazonaws.com"
      },
      "sa-east-1": {
        "S3hostedzoneID": "Z7KQH4QJS55SO",
        "websiteendpoint": "s3-website-sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "S3hostedzoneID": "Z3AQBSTGFYJSTF",
        "websiteendpoint": "s3-website-us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "S3hostedzoneID": "Z2O1EMRO9K5GLX",
        "websiteendpoint": "s3-website.us-east-2.amazonaws.com"
      },
      "us-west-1": {
        "S3hostedzoneID": "Z2F56UZL2M1ACD",
        "websiteendpoint": "s3-website-us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "S3hostedzoneID": "Z3BJ6K6RIION7M",
        "websiteendpoint": "s3-website-us-west-2.amazonaws.com"
      }
    }
  }
}